{"version":3,"sources":["routes/About.js","routes/Error_page.js","components/Navigation.js","store/store.js","action/useMaskData.js","components/kakaoMap/KakaoMap.js","action/useIpAddr.js","action/kakaomap/useGeolocation.js","action/kakaomap/useSetMarker.js","action/kakaomap/useCenterChanged.js","components/MaskStoreList.js","routes/MaskMap.js","App.js","index.js"],"names":["Title","Typography","Paragraph","About","href","level","GithubOutlined","IdcardOutlined","Error_page","Navigation","style","marginBottom","defaultSelectedKeys","defaultOpenKeys","mode","theme","Item","key","EnvironmentOutlined","to","NotificationOutlined","InfoCircleOutlined","store","createStore","state","maskMap","map","storeList","oldMarker","oldOverlay","action","console","log","type","marker","overlay","actionCreators","useMaskData","dispatch","useDispatch","useState","address","count","stores","addr","code","created_at","lat","lng","name","remain_stat","stock_at","maskData","setMaskData","getMaskDataAddr","location","a","Axios","get","then","response","data","catch","error","getMaskDataGeo","m","length","kakao","window","KakaoMap","dispatcher","useEffect","container","document","getElementById","options","center","maps","LatLng","Map","id","height","kakaoMap","useIpAddr","useSelector","getIpAddr","panTo","latitude","longitude","message","info","content","duration","useGeolocation","getGeo","navigator","geolocation","getCurrentPosition","position","coords","alert","marker_old","overlay_old","useSetMarker","setMarker","value","setMap","marker_new","overlay_new","imageSrc","remain_color","customOverlay","CustomOverlay","yAnchor","imageSize","Size","markerImage","MarkerImage","Marker","title","image","event","addListener","getPosition","push","useCenterChanged","setEvent","latlng","getCenter","getLat","getLng","Panel","Collapse","MaskStoreList","className","maxWidth","margin","marginTop","header","textAlign","index","hoverable","onClick","scrollUp","documentElement","scrollTop","setTimeout","target","color","MaskMap","paddingLeft","paddingRight","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.cc1a66f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { GithubOutlined, IdcardOutlined } from '@ant-design/icons';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst About = () => {\r\n  return (\r\n    <Typography>\r\n      <a href=\"https://github.com/JaeSeoKim/mask-map/\">\r\n        <Title>mask-map</Title>\r\n      </a>\r\n      <Paragraph>\r\n        이 프로젝트는 한국 공공데이터 포털에서 제공하는 `건강보험심사평가원_공적 마스크 판매 정보 API` 를 이용하여 제작 하였습니다.\r\n        </Paragraph>\r\n      <a href=\"https://github.com/JaeSeoKim\">\r\n        <Title level={4}><GithubOutlined /> Github</Title>\r\n      </a>\r\n      <a href=\"https://jaeseokim.tistory.com/\">\r\n        <Title level={4}><IdcardOutlined /> Blog</Title>\r\n      </a>\r\n      <Title level={4}>Copyright 2020. 김재서. All rights reserved.</Title>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Error_page = () => {\r\n  return (\r\n    <h1>404 Error</h1>\r\n  );\r\n};\r\n\r\nexport default Error_page;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Menu, Affix } from 'antd';\r\nimport {\r\n  InfoCircleOutlined,\r\n  NotificationOutlined,\r\n  EnvironmentOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Affix style={{ marginBottom: 10 }}>\r\n      <div>\r\n        <Menu\r\n          defaultSelectedKeys={['maskMap']}\r\n          defaultOpenKeys={['menu']}\r\n          mode=\"horizontal\"\r\n          theme=\"white\"\r\n        >\r\n          <Menu.Item key=\"maskMap\">\r\n            <EnvironmentOutlined />\r\n            <NavLink to=\"/\">\r\n              <span>마스크맵</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"disasterMsg\">\r\n            <NotificationOutlined />\r\n            <a href=\"http://msg.devjs.cf/\">\r\n              <span>재난문자 목록</span>\r\n            </a>\r\n          </Menu.Item>\r\n          \r\n          <Menu.Item key=\"about\">\r\n            <InfoCircleOutlined />\r\n            <NavLink to=\"/about\">\r\n              <span>About</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { createStore } from \"redux\";\r\n\r\n/**\r\n * MaskMap Action Type\r\n */\r\n\r\nconst SET_MAP = \"setMap\";\r\nconst SET_STORE_LIST = \"setStoreList\";\r\nconst ADD_MARKER = \"addMarker\";\r\n\r\nconst setMap = (map) => {\r\n  return {\r\n    type: SET_MAP,\r\n    map: map\r\n  }\r\n};\r\n\r\n\r\nconst setStoreList = (storeList) => {\r\n  return {\r\n    type: SET_STORE_LIST,\r\n    storeList: storeList\r\n  };\r\n};\r\n\r\nconst addMarker = (marker, overlay) => {\r\n  return {\r\n    type: ADD_MARKER,\r\n    marker: marker,\r\n    overlay: overlay\r\n  }\r\n};\r\n\r\n\r\n\r\nconst reducer = (state = {\r\n  maskMap: {\r\n    map: null,\r\n    storeList: [],\r\n    oldMarker: [],\r\n    oldOverlay: []\r\n  }\r\n}, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n\r\n    case SET_MAP:\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          map: action.map\r\n        }\r\n      };\r\n\r\n    case SET_STORE_LIST:\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          storeList: action.storeList\r\n        }\r\n      };\r\n\r\n    case ADD_MARKER:\r\n      console.log(\"adding... :\",action);\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          oldMarker: action.marker,\r\n          oldOverlay: action.overlay\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport const actionCreators = {\r\n  setStoreList,\r\n  setMap,\r\n  addMarker\r\n};\r\n\r\nexport default store;","import { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../store/store\";\r\n\r\nconst useMaskData = () => {\r\n  /*\r\n  주소 기준 동네별 공적 마스크 판매정보 제공 서비스주소 기준 동네별 공적 마스크 판매정보 제공 서비스\r\n\r\n  address     주소\t            string\t\t\t검색 기준이 될 주소\r\n  count\t      조회 수\t          integer\t\t\t조회 데이터 수\r\n  addr\t      판매처 주소       string\t\t\t판매처 주소\r\n  code\t      식별코드          string\t\t\t\r\n  created_at\t데이터 생성일자   string\t\t\t\r\n  remain_stat\t재고 상태\t        string\t\t\t100개 이상(녹색): 'plenty' / \r\n                                            30개 이상 100개미만(노랑색): 'some' / \r\n                                            2개 이상 30개 미만(빨강색): 'few' / \r\n                                            1개 이하(회색): 'empty' / \r\n                                            판매중지: 'break'\r\n  stock_at\t  입고시간\t        string\t\t\t\r\n  lat\t        위도\t            number($float)\t\t\twgs84 좌표계 / \r\n                                                    최소:33.0, 최대:43.0\r\n  lng\t        경도\t            number($float)\t\t\twgs84 표준 / \r\n                                                    최소:124.0, 최대:132.0\r\n  name\t      이름\t            string\t\t\t\r\n  type\t      판매처 유형\t      string\t\t\t약국: '01', 우체국: '02', 농협: '03'\r\n  */\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [maskData, setMaskData] = useState(\r\n    {\r\n      address: \"\",\r\n      count: 0,\r\n      stores: [\r\n        {\r\n          addr: \"\",\r\n          code: \"\",\r\n          created_at: \"\",\r\n          lat: 0,\r\n          lng: 0,\r\n          name: \"\",\r\n          remain_stat: \"\",\r\n          stock_at: \"\",\r\n          type: \"\"\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  const getMaskDataAddr = async (location) => {\r\n    console.log(\"location: \", location);\r\n    await Axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByAddr/json?address=${location}`)\r\n      .then(response => {\r\n        const { address,\r\n          count,\r\n          stores } = response.data\r\n        console.log(response);\r\n        setMaskData(\r\n          {\r\n            address,\r\n            count,\r\n            stores\r\n          }\r\n        );\r\n        console.log(stores);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /*\r\n  url\t/storesByGeo/json\r\n  key\t항목명(국문)\ttype\t기본값\t필수\t항목설명\r\n  Lat\t위도\tnumber\t\tN\twgs84 좌표계 / \r\n  최소:33.0, 최대:43.0\r\n  lng\t경도\tnumber\t\tN\twgs84 표준 / \r\n  최소:124.0, 최대:132.0\r\n  m\t반경(미터)\tinteger\t\tN\t최대 5000(5km)까지 조회 가능\r\n  */\r\n\r\n  const getMaskDataGeo = async (lat, lng, m) => {\r\n    console.log(\"lat: \", lat, \" lng: \", lng, \" m: \", m);\r\n    await Axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=${m}`)\r\n      .then(response => {\r\n        const {\r\n          stores } = response.data\r\n        dispatch(actionCreators.setStoreList(stores));\r\n        console.log(stores.length);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return { ...maskData, getMaskDataAddr, getMaskDataGeo };\r\n}\r\n\r\nexport default useMaskData;","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../store/store\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst KakaoMap = () => {\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('mask-map');\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    \r\n\r\n    dispatcher(actionCreators.setMap(map), [map]);\r\n  }, [])\r\n\r\n  return <div id=\"mask-map\" style={{ height: \"100%\" }}>\r\n  </div>\r\n}\r\n\r\nexport default KakaoMap;","import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { message } from \"antd\";\r\n\r\nconst { kakao } = window;\r\n\r\nvar kakaoMap = null;\r\n\r\nconst useIpAddr = () => {\r\n\r\n  const { map } = useSelector(state => ({ map: state.maskMap.map }), []);\r\n\r\n  kakaoMap = map;\r\n\r\n  const getIpAddr = async () => {\r\n    await Axios.get(\"https://ipapi.co/json\")\r\n      .then((response) => {\r\n        if (kakaoMap !== null) {\r\n          kakaoMap.panTo(new kakao.maps.LatLng(response.data.latitude,response.data.longitude));\r\n          message.info({ content: \"IP 위치 사용(오차 발생)\", key: \"IpInfo\", duration: 2 });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return { getIpAddr };\r\n};\r\nexport default useIpAddr;\r\n","import { useSelector } from \"react-redux\";\r\nimport useIpAddr from \"../useIpAddr\";\r\n\r\nconst { kakao } = window\r\n\r\nvar kakaoMap= {};\r\n\r\nconst useGeolocation = () => {\r\n\r\n  const { map } = useSelector(state => ({ map: state.maskMap.map }), []);\r\n\r\n  const { getIpAddr } = useIpAddr();\r\n\r\n  kakaoMap = map;\r\n  \r\n  const getGeo = () => {\r\n    if (navigator.geolocation) {\r\n      if (kakaoMap !== null) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          kakaoMap.panTo(new kakao.maps.LatLng(position.coords.latitude, position.coords.longitude));\r\n        }\r\n        ,()=> getIpAddr());\r\n      }\r\n    } else {\r\n      alert(\"이 브라우저에서는 Geolocation이 지원되지 않습니다.\")\r\n    }\r\n  }\r\n  return {getGeo} ;\r\n}\r\n\r\nexport default useGeolocation;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../store/store\";\r\n\r\nconst { kakao } = window;\r\n\r\nvar stores = [];\r\nvar kakaoMap = {};\r\nvar marker_old = [];\r\nvar overlay_old = [];\r\n\r\nconst useSetMarker = () => {\r\n\r\n  const { map, storeList, oldMarker, oldOverlay } = useSelector(state => ({\r\n    map: state.maskMap.map,\r\n    storeList: state.maskMap.storeList,\r\n    oldMarker: state.maskMap.oldMarker,\r\n    oldOverlay: state.maskMap.oldOverlay\r\n  }));\r\n  const dispatcher = useDispatch();\r\n\r\n\r\n  stores = storeList;\r\n  kakaoMap = map;\r\n  marker_old = oldMarker;\r\n  overlay_old = oldOverlay;\r\n\r\n\r\n  const setMarker = () => {\r\n\r\n    // Marker 초기화\r\n    marker_old.map(value => {\r\n      value.setMap(null);\r\n    });\r\n    // overlay 초기화\r\n    overlay_old.map(value => {\r\n      value.setMap(null);\r\n    });\r\n\r\n\r\n    var marker_new = [];\r\n    var overlay_new = [];\r\n\r\n    // Marker 설정\r\n    stores.map(value => {\r\n      var imageSrc = \"\"\r\n      var remain_stat = \"\"\r\n      var remain_color = \"\"\r\n      switch (value.remain_stat) {\r\n        case \"plenty\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/mask-map/master/resource/maskMapMarker/green.png\";\r\n          remain_stat = \"100개 이상\";\r\n          remain_color = \"#87d068\";\r\n          break;\r\n        case \"some\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/mask-map/master/resource/maskMapMarker/blue.png\";\r\n          remain_stat = \"30개 이상 100개 미만\";\r\n          remain_color = \"#2db7f5\";\r\n          break;\r\n        case \"few\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/mask-map/master/resource/maskMapMarker/red.png\";\r\n          remain_stat = \"30개 미만\";\r\n          remain_color = \"#f50\";\r\n          break;\r\n        case \"empty\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/mask-map/master/resource/maskMapMarker/gray.png\";\r\n          remain_stat = \"1개 이하\";\r\n          remain_color = \"#A9A9A9\";\r\n          break;\r\n        case \"break\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/mask-map/master/resource/maskMapMarker/black.png\";\r\n          remain_stat = \"판매중지\";\r\n          remain_color = \"#A9A9A9\";\r\n          //재고 없는 거는 화면에 표시 안함\r\n          //return;\r\n          break;\r\n        default:\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/mask-map/master/resource/maskMapMarker/black.png\";\r\n          remain_stat = \"ERROR\";\r\n          remain_color = \"#A9A9A9\";\r\n          return;\r\n      }\r\n\r\n      const content =\r\n        `<div style=\"margin-bottom: 40px; width: 300px;\">` +\r\n        `  <div class=\"ant-card ant-card-bordered ant-card-hoverable\" style=\"font-size: 12px; border-radius: 5px;\">` +\r\n        `    <div class=\"ant-card-head\" style=\"padding: 10px;\">` +\r\n        `      <div class=\"ant-card-head-wrapper\" >` +\r\n        `        <div class=\"ant-card-head-title\" style=\"font-size: 13px; padding: 0px;\">` +\r\n        `          ${value.name}` +\r\n        `        </div>` +\r\n        `      </div>` +\r\n        `    </div>` +\r\n        `    <div class=\"ant-card-body\" style=\"text-align: left; padding: 10px;\">` +\r\n        `      <a href=\"https://map.kakao.com/link/map/${value.name},${value.lat},${value.lng}\" target=\"_blank\" >` +\r\n        `       <p style=\"width:290px; white-space:normal; \">주소: ${value.addr}</p>` +\r\n        `      </a>` +\r\n        `       <p>생성시간: ${value.created_at}</p>` +\r\n        `       <p>입고시간: ${value.stock_at}</p>` +\r\n        `       <span class=\"ant-tag ant-tag-has-color\" style=\"background-color:${remain_color}\">${remain_stat}</span>` +\r\n        `   </div>` +\r\n        `  </div>` +\r\n        `</div>`\r\n        \r\n\r\n      // 커스텀 오버레이를 생성합니다\r\n      var customOverlay = new kakao.maps.CustomOverlay({\r\n        map: null,\r\n        position: new kakao.maps.LatLng(value.lat, value.lng),\r\n        content: content,\r\n        yAnchor: 1\r\n      });\r\n\r\n\r\n      // 마커 이미지의 이미지 크기 입니다\r\n      var imageSize = new kakao.maps.Size(30, 35);\r\n      // 마커 이미지를 생성합니다    \r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n\r\n      // 마커를 생성합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: kakaoMap, // 마커를 표시할 지도\r\n        position: new kakao.maps.LatLng(value.lat, value.lng), // 마커를 표시할 위치\r\n        title: value.name, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n        image: markerImage // 마커 이미지 \r\n      });\r\n\r\n      // 마커를 클릭했을 때 커스텀 오버레이를 표시합니다\r\n      kakao.maps.event.addListener(marker, 'click', function () {\r\n        console.log(marker.getPosition());\r\n        kakaoMap.panTo(new kakao.maps.LatLng(value.lat+0.0013, value.lng));\r\n        customOverlay.setMap(kakaoMap);\r\n      });\r\n\r\n      // 커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \r\n\r\n      marker_new.push(marker);\r\n\r\n      overlay_new.push(customOverlay)\r\n    });\r\n\r\n    dispatcher(actionCreators.addMarker(marker_new, overlay_new));\r\n    console.log(marker_new, overlay_new);\r\n\r\n  };\r\n  return { setMarker };\r\n}\r\n\r\nexport default useSetMarker;","import { useSelector } from \"react-redux\";\r\nimport useMaskData from \"../useMaskData\";\r\nimport useSetMarker from \"./useSetMarker\";\r\n\r\nconst { kakao } = window;\r\n\r\nvar kakaoMap = {};\r\n\r\nconst useCenterChanged = () => {\r\n  const { map } = useSelector(state => ({\r\n    map: state.maskMap.map\r\n  }));\r\n\r\n  const { getMaskDataGeo } = useMaskData();\r\n\r\n  const { setMarker } = useSetMarker();\r\n\r\n  kakaoMap = map;\r\n\r\n  const setEvent = () => {\r\n    kakao.maps.event.addListener(kakaoMap, 'dragend', () => {\r\n\r\n      // 지도의 중심좌표를 얻어옵니다 \r\n      var latlng = kakaoMap.getCenter();\r\n\r\n      getMaskDataGeo(latlng.getLat(), latlng.getLng(), 10000);\r\n\r\n      console.log(latlng.getLat(), latlng.getLng());\r\n\r\n      setMarker();\r\n\r\n    });\r\n  };\r\n\r\n  return { setEvent };\r\n\r\n}\r\n\r\nexport default useCenterChanged;","import React from \"react\";\r\nimport { Collapse, Card, Tag } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Panel } = Collapse;\r\nconst { kakao } = window;\r\n\r\nvar kakaoMap = null;\r\nvar stores = [];\r\n\r\nconst MaskStoreList = () => {\r\n\r\n  const { storeList, map } = useSelector(state => ({\r\n    storeList: state.maskMap.storeList,\r\n    map: state.maskMap.map\r\n  }));\r\n\r\n  kakaoMap = map;\r\n  stores = storeList;\r\n\r\n  const onclickHandle = (lat, lng) => {\r\n    kakaoMap.panTo(new kakao.maps.LatLng(lat, lng));\r\n  };\r\n\r\n  const scrollUpDelay = 1;\r\n  const scrollUpSpeed = 60;\r\n\r\n  const scrollUp = () => {\r\n    console.log(\"scrollUp\");\r\n    if (document.documentElement.scrollTop < 1) {\r\n      return;\r\n    }\r\n    document.documentElement.scrollTop = document.documentElement.scrollTop - scrollUpSpeed;\r\n    setTimeout(() => {\r\n      scrollUp();\r\n    }, scrollUpDelay);\r\n  }\r\n\r\n  return (\r\n    <div className=\"more_Info\">\r\n      <Collapse style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13, marginTop: 15 }}>\r\n        <Panel header={\"지도의 기준 현재 구매 가능한 마스크 판매처\"} key=\"maskMap\">\r\n          <h3 style={{ textAlign: \"left\" }}>\r\n            <p>지도의 중심 기준 1KM 반경의 판매처를 가지고 사용합니다.</p>\r\n            <p>현재 1개 이상 재고를 소유한 판매처만 목록화 했습니다.</p>\r\n            <p>해당 카드를 클릭 하시면 지도가 해당 판매처를 가리키게 됩니다!</p>\r\n          </h3>\r\n          {storeList.map((value, index) => (\r\n            typeof value.remain_stat !== \"undefined\" && value.remain_stat !== \"\" && value.remain_stat !== null && value.remain_stat !== \"break\" && value.remain_stat !== \"empty\" &&\r\n            <div key={value.code}>\r\n              <Card hoverable onClick={() => {\r\n                onclickHandle(value.lat, value.lng);\r\n                scrollUp();\r\n              }} style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n                title={value.name} >\r\n                <div style={{ textAlign: \"left\" }}>\r\n                  <a href={\"https://map.kakao.com/link/map/\" + value.name + \",\" + value.lat + \",\" + value.lng} target=\"_blank\">\r\n                    <p>주소 : {value.addr}</p>\r\n                  </a>\r\n                  <p>마지막 업데이트 : {value.created_at}</p>\r\n                  <p>입고 시간 : {value.stock_at}</p>\r\n                  <p>\r\n                    {value.remain_stat === \"plenty\" && <Tag color=\"#87d068\">100개 이상</Tag>}\r\n                    {value.remain_stat === \"some\" && <Tag color=\"#2db7f5\">30개 이상 100개 미만</Tag>}\r\n                    {value.remain_stat === \"few\" && <Tag color=\"#f50\">30개 미만</Tag>}\r\n                  </p>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MaskStoreList;","import React, { useEffect } from \"react\";\r\nimport useMaskData from \"../action/useMaskData\";\r\nimport KaKaoMap from \"../components/kakaoMap/KakaoMap\";\r\nimport useGeolocation from \"../action/kakaomap/useGeolocation\";\r\nimport useSetMarker from \"../action/kakaomap/useSetMarker\";\r\nimport useCenterChanged from \"../action/kakaomap/useCenterChanged\";\r\nimport useIpAddr from \"../action/useIpAddr\";\r\nimport MaskStoreList from \"../components/MaskStoreList\";\r\n\r\n\r\nconst MaskMap = () => {\r\n\r\n  const { getMaskDataGeo } = useMaskData();\r\n  const { setMarker } = useSetMarker();\r\n  const { getGeo } = useGeolocation();\r\n  const { setEvent } = useCenterChanged();\r\n  const { getIpAddr } = useIpAddr();\r\n  useEffect(() => {\r\n    getMaskDataGeo(37.4388, 127.1396, 10000).then(() => {\r\n      getGeo();\r\n      setMarker();\r\n      setEvent();\r\n    });\r\n  }, []);\r\n  return <div>\r\n    <div>\r\n      <h3>공적 마스크 지도 입니다.</h3>\r\n      <h4>해당 마커를 클릭 하시면 자세한 정보를 확인 할 수 있습니다.</h4>\r\n      <h4>* 실제정보와 5분정도의 시간차이가 있습니다.</h4>\r\n    </div>\r\n    <div style={{ height: \"50vh\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\r\n      <KaKaoMap >\r\n      </KaKaoMap>\r\n      <MaskStoreList>\r\n      </MaskStoreList>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default MaskMap;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport About from \"./routes/About\";\r\nimport Error_page from \"./routes/Error_page\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport MaskMap from \"./routes/MaskMap\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Navigation />\r\n        <Switch >\r\n          <Route path=\"/\" exact={true} component={MaskMap} />\r\n          <Route path=\"/about\" exact={true} component={About} />\r\n          <Route component={Error_page} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'antd/dist/antd.css';\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}